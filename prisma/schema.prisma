generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model messages {
  id                Int             @id @default(autoincrement())
  content           String          @db.Text
  reply_message_id  Int?            @unique
  user_room_chat_id String
  user_id           String
  isRead            Boolean?        @default(false)
  created_at        DateTime        @default(now())
  updated_at        DateTime        @default(now())
  userRoomChatId    Int?
  messages          messages?       @relation("messagesTomessages", fields: [reply_message_id], references: [id])
  other_messages    messages?       @relation("messagesTomessages")
  user_room_chat    user_room_chat? @relation(fields: [userRoomChatId], references: [id])
  users             users           @relation(fields: [user_id], references: [id])
  room_chat         room_chat       @relation(fields: [user_room_chat_id], references: [id])

  @@index([userRoomChatId], map: "messages_userRoomChatId_fkey")
  @@index([user_id], map: "messages_user_id_fkey")
  @@index([user_room_chat_id], map: "messages_user_room_chat_id_fkey")
}

model roles {
  id    Int     @id
  title String
  users users[]
}

model room_chat {
  id              String           @id
  title           String?
  created_user_id String
  created_at      DateTime         @default(now())
  updated_at      DateTime         @default(now())
  status          Boolean          @default(true)
  messages        messages[]
  users           users            @relation(fields: [created_user_id], references: [id])
  user_room_chat  user_room_chat[]

  @@index([created_user_id], map: "room_chat_created_user_id_fkey")
}

model user_room_chat {
  id         Int        @id @default(autoincrement())
  user_id    String
  room_id    String
  is_in_room Boolean    @default(true)
  messages   messages[]
  room_chat  room_chat  @relation(fields: [room_id], references: [id])
  users      users      @relation(fields: [user_id], references: [id])

  @@index([room_id], map: "user_room_chat_room_id_fkey")
  @@index([user_id], map: "user_room_chat_user_id_fkey")
}

model users {
  id             String           @id
  old_id         String?
  avatar         String?          @db.Text
  email          String?
  email_verified Boolean?
  name           String?
  uid            String?
  phone_number   String?          @db.Text
  provider       String?
  role_id        Int?
  approved_at    DateTime?
  created_at     DateTime?        @default(now())
  updated_at     DateTime?        @default(now())
  messages       messages[]
  room_chat      room_chat[]
  user_room_chat user_room_chat[]
  roles          roles?           @relation(fields: [role_id], references: [id])

  @@index([role_id], map: "users_role_id_fkey")
}
